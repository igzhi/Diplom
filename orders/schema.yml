openapi: 3.0.3
info:
  title: Orders API
  version: 1.0.0
  description: Api for workin with py diplom project
paths:
  /api/v1/basket/:
    get:
      operationId: api_v1_basket_retrieve
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProiductList'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    post:
      operationId: api_v1_basket_create
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemsList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemsList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemsList'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    delete:
      operationId: api_v1_basket_destroy
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/category/:
    get:
      operationId: api_v1_category_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/confirmation/:
    post:
      operationId: api_v1_confirmation_create
      description: View для подтверждения заказа и переноса его из корзины
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/contacts/:
    get:
      operationId: api_v1_contacts_list
      description: Get List of users contacts
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateContactResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    post:
      operationId: api_v1_contacts_create
      description: Add new contact for user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/contacts/{id}/:
    get:
      operationId: api_v1_contacts_retrieve
      description: Класс для работы с контактами пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контакты.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: api_v1_contacts_update
      description: Add new contact for user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контакты.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    patch:
      operationId: api_v1_contacts_partial_update
      description: Add new contact for user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контакты.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    delete:
      operationId: api_v1_contacts_destroy
      description: Add new contact for user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контакты.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      description: Класс для работы с заказами, сделанными пользователем
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListOrdersResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/orders/{id}/:
    get:
      operationId: api_v1_orders_retrieve
      description: Класс для работы с заказами, сделанными пользователем
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/product/:
    get:
      operationId: api_v1_product_list
      description: View для просмотра товаров
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProiductList'
          description: null
  /api/v1/product/{id}/:
    get:
      operationId: api_v1_product_retrieve
      description: View для просмотра товаров
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProiductList'
          description: null
  /api/v1/shop/import/:
    post:
      operationId: api_v1_shop_import_create
      description: View для отправки поставщиком прайс листа
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUrlForUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendUrlForUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendUrlForUpdate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/shop/orders/:
    get:
      operationId: api_v1_shop_orders_list
      description: Get List of orders with products from logged in shop user
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/shop/stauts/:
    post:
      operationId: api_v1_shop_stauts_create
      description: Available only for users with "shop" usertype
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopStatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopStatusUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopStatusUpdate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/shops/:
    get:
      operationId: api_v1_shops_list
      description: Класс для просмотра списка магазинов
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/user/:
    get:
      operationId: api_v1_user_retrieve
      description: Класс для работы с данными пользователей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
    put:
      operationId: api_v1_user_update
      description: Класс для работы с данными пользователей
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/user/activate/{uidb64}/{token}/:
    get:
      operationId: api_v1_user_activate_retrieve
      description: |-
        View для активации аккаунтов зарегистрированных пользователей

        uid64, token -- ID и токен, отправленные пользователю на почтовый адрес
      parameters:
      - in: path
        name: token
        schema:
          type: string
          pattern: '[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20}'
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
          pattern: '[0-9A-Za-z_\-]+'
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/user/login/:
    post:
      operationId: api_v1_user_login_create
      description: View для авторизации пользователей
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
          description: Return user auth token in "Token" field
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /api/v1/user/password_reset/:
    post:
      operationId: api_v1_user_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/user/password_reset/confirm/:
    post:
      operationId: api_v1_user_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/user/password_reset/validate_token/:
    post:
      operationId: api_v1_user_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /api/v1/user/passwordreset_confirm/{token}/:
    get:
      operationId: api_v1_user_passwordreset_confirm_retrieve
      description: View для отправки нового пароля пользователем
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register/:
    post:
      operationId: api_v1_user_register_create
      description: View для регистрации новых пользователей в системе
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dict'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Returned text of exceptions in Message field
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            application/vnd.oai.openapi+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: ''
components:
  schemas:
    BasketItemsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ConcreteItemRequest'
      required:
      - items
    Category:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 80
      required:
      - name
    ConcreteItemRequest:
      type: object
      properties:
        model_id:
          type: integer
        quantity:
          type: integer
      required:
      - model_id
      - quantity
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 150
        house:
          type: string
          title: Дом
          maxLength: 30
        apartment:
          type: string
          title: Квартира
          maxLength: 10
        phone_number:
          type: string
          title: Номер телефона пользователя
          maxLength: 20
        user:
          type: integer
          title: Пользователь
      required:
      - city
      - house
      - id
      - phone_number
      - street
      - user
    CreateContactResponse:
      type: object
      properties:
        Status:
          type: boolean
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
      - Data
      - Status
    Dict:
      type: object
      properties:
        Status:
          type: boolean
      required:
      - Status
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Errors:
      type: object
      properties:
        Status:
          type: boolean
        Message:
          type: string
      required:
      - Message
      - Status
    ListOrdersResponse:
      type: object
      properties:
        Status:
          type: boolean
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
      - Data
      - Status
    ModelParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          title: Значение характеристики
          maxLength: 150
      required:
      - parameter
      - value
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус заказа
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemGet'
        order_sum:
          type: string
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
      required:
      - contact
      - id
      - items
      - order_sum
      - status
      - user
    OrderItemGet:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/ProductModel'
        quantity:
          type: integer
          maximum: 2147483647
          title: Количество
          minimum: 0
        order:
          type: integer
          title: Заказ
      required:
      - order
      - parameters
      - quantity
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 150
        house:
          type: string
          title: Дом
          maxLength: 30
        apartment:
          type: string
          title: Квартира
          maxLength: 10
        phone_number:
          type: string
          title: Номер телефона пользователя
          maxLength: 20
        user:
          type: integer
          title: Пользователь
    Product:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 50
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Наименование
          maxLength: 50
        price:
          type: integer
          maximum: 2147483647
          title: Цена
          minimum: 0
        quantity:
          type: integer
          maximum: 2147483647
          title: Количество
          minimum: 0
        product:
          $ref: '#/components/schemas/Product'
        shop:
          type: string
          readOnly: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ModelParameter'
      required:
      - id
      - name
      - parameters
      - price
      - product
      - quantity
      - shop
    ProiductList:
      type: object
      properties:
        Status:
          type: boolean
        data:
          $ref: '#/components/schemas/Order'
      required:
      - Status
      - data
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    SendUrlForUpdate:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    Shop:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 50
        status:
          type: boolean
          title: Работает ли магазин
      required:
      - name
    ShopStatusUpdate:
      type: object
      properties:
        status:
          type: boolean
      required:
      - status
    StatusEnum:
      enum:
      - basket
      - new
      - accepted
      - ready
      - sent
      - delivered
      type: string
    TokenData:
      type: object
      properties:
        Status:
          type: boolean
        Token:
          type: string
      required:
      - Status
      - Token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          title: Имя Пользователя
          maxLength: 100
        email:
          type: string
          format: email
          title: Email пользователя
          maxLength: 254
        usertype:
          allOf:
          - $ref: '#/components/schemas/UsertypeEnum'
          title: Тип пользователя
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - id
      - password
      - usertype
    UserDataResponse:
      type: object
      properties:
        Status:
          type: boolean
      required:
      - Status
    UsertypeEnum:
      enum:
      - shop
      - buyer
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
